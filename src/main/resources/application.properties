server.context-path=/tutorial
server.port=8280
# default profile is `default`
#spring.profiles.active = production
spring.main.banner-mode = console

# === Datasource ===
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/Tutorial?verifyServerCertificate=false&useSSL=false&requireSSL=false
spring.datasource.username = sa
spring.datasource.password = let me enter

# === Hibernate / JPA ===
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# Naming strategy
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = none
# Enable lazy loading
spring.jpa.properties.hibernate.enable_lazy_load_no_trans = true
# Show or not log for each sql query
spring.jpa.show-sql = true
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# === Spring security ===
#security.basic.enabled=false
#management.security.enabled=false
security.ignored=/**

# === Logging ===
logging.level.root = info
logging.level.com.vizurd = debug
logging.file = ../logs/tutorial.log
logging.level.org.springframework.web = DEBUG
# Logging pattern for the console
logging.pattern.console = %d{HH:mm:ss.SSS} %clr(${LOG_LEVEL_PATTERN:%-5p}) %clr(%c{39}){magenta} - %msg%n